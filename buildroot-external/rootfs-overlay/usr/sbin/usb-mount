#!/bin/sh

usage()
{
    ${log} "Usage: $0 {add|remove} device_name (e.g. sdb1)"
    exit 1
}

if [ "$#" -ne 2 ]; then
    usage
fi

ACTION=$1
DEVBASE=$2
DEVICE="/dev/${DEVBASE}"

# See if this drive is already mounted, and if so where
MOUNT_POINT=$(mount | grep ${DEVICE} | awk '{ print $3 }' | head -1)

DEV_LABEL=""
log=echo

do_mount()
{
    if [ -n "${MOUNT_POINT}" ]; then
        ${log} "Warning: ${DEVICE} is already mounted at ${MOUNT_POINT}"
        exit 0
    fi

    # Get info for this drive: $ID_FS_LABEL and $ID_FS_TYPE
    eval $(blkid -o udev ${DEVICE} | grep -i -e "ID_FS_LABEL" -e "ID_FS_TYPE")

    # Figure out a mount point to use
    LABEL=${ID_FS_LABEL}
    if [ -z "$LABEL" ]; then
        ${log} "Warning: ${DEVICE} has no label"
        exit 0
    fi
    if echo "$LABEL" | grep -q "^hassos-"; then
        ${log} "Skipping system partition on ${DEVICE}"
        exit 0
    fi
    if echo "$LABEL" | grep -q "^CONFIG$"; then
        ${log} "Skipping CONFIG partition on ${DEVICE}"
        systemctl start hassos-config.service
        exit 0
    fi

    if grep -q " /media/${LABEL} " /etc/mtab; then
        # Already in use, make a unique one
        LABEL+="-${DEVBASE}"
    fi
    DEV_LABEL="${LABEL}"

    # Use the device name in case the drive doesn't have label
    if [ -z "${DEV_LABEL}" ]; then
        DEV_LABEL="${DEVBASE}"
    fi

    MOUNT_POINT="/media/${DEV_LABEL}"

    ${log} "Mount point: ${MOUNT_POINT}"

    mkdir -p ${MOUNT_POINT}

    # Global mount options
    OPTS="rw,relatime"

    # File system type specific mount options
    if [ "${ID_FS_TYPE}" = "vfat" ]; then
        OPTS+=",uid=501,gid=501,umask=000,utf8=1"
    elif [ "${ID_FS_TYPE}" = "exfat" ]; then
        OPTS+=",uid=501,gid=501,umask=000"
    fi

    if ! mount -o ${OPTS} ${DEVICE} ${MOUNT_POINT}; then
        ${log} "Error mounting ${DEVICE} (status = $?)"
        rmdir "${MOUNT_POINT}"
        exit 1
    fi

    ${log} "Mounted ${DEVICE} at ${MOUNT_POINT}"
}

do_unmount()
{
    if [ -z "${MOUNT_POINT}" ]; then
        ${log} "Warning: ${DEVICE} is not mounted"
    elif echo "${MOUNT_POINT}" | grep -q "^/media"; then
        umount -l ${DEVICE}
        ${log} "Unmounted ${DEVICE} from ${MOUNT_POINT}"
        /bin/rmdir "${MOUNT_POINT}"
    else
        ${log} "Warning: ${DEVICE} is not mounted under /media"
    fi
}

case "${ACTION}" in
    add)
        do_mount
        ;;
    remove)
        do_unmount
        ;;
    *)
        usage
        ;;
esac
